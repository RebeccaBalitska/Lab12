class TRectangle:
    def __init__(self, a = 0, b = 0):
        if a >= 0 or b >= 0:
            self.__a = a
            self.__b = b
        else:
            raise Exception('Side length should be positive')

    @property
    def a(self):
        return self.__a

    @a.setter
    def a(self, a):
        if a >= 0:
            self.__a = a
        else:
            raise Exception('Side length should be positive')

    @property
    def b(self):
        return self.__b

    @b.setter
    def b(self, b):
        if b >= 0:
            self.__b = b
        else:
            raise Exception('Side length should be positive')

    def enter_a(self):
        self.__a = float(input("Введіть сторону а: "))

    def enter_b(self):
        self.__b = float(input("Введіть сторону b: "))

    @property
    def area(self):
        return self.__a * self.__b

    @property
    def perimeter(self):
        return (self.__a + self.__b) * 2

    def __lt__(self, other):
        return self.area < other.area

    def __le__(self, other):
        return self.area <= other.area

    def __eq__(self, other):
        return self.area == other.area

    def __ne__(self, other):
        return self.area != other.area

    def __gt__(self, other):
        return self.area > other.area

    def __ge__(self, other):
        return self.area >= other.area

    def __add__(self, other):
        return TRectangle(self.__a + other.a, self.__b + other.b)

    def __sub__(self, other):
        return TRectangle(self.__a - other.a, self.__b - other.b)

    def __mul__(self, other):
        return TRectangle(self.__a * other.a, self.__b * other.b)
